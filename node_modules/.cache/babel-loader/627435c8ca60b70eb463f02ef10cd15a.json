{"ast":null,"code":"import _defineProperty from \"/home/u190155/CS353/nativo/nativo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/u190155/CS353/nativo/nativo/src/components/PasswordForget/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"PasswordForget\"), React.createElement(PasswordForgetForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const email = this.state.email;\n      this.props.firebase.doPasswordReset(email).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error;\n    const isInvalid = email === '';\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Reset My Password\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst PasswordForgetLink = () => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: ROUTES.PASSWORD_FORGET,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Forgot Password?\"));\n\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm, PasswordForgetLink };","map":{"version":3,"sources":["/home/u190155/CS353/nativo/nativo/src/components/PasswordForget/index.js"],"names":["React","Component","Link","withFirebase","ROUTES","PasswordForgetPage","INITIAL_STATE","email","error","PasswordForgetFormBase","constructor","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","PasswordForgetLink","PASSWORD_FORGET","PasswordForgetForm"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AACA,MAAMC,kBAAkB,GAAG,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAMA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAIA,MAAMC,sBAAN,SAAqCR,SAArC,CAA+C;AAC7CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAInBC,QAJmB,GAIRC,KAAK,IAAI;AAAA,YACVN,KADU,GACA,KAAKO,KADL,CACVP,KADU;AAElB,WAAKI,KAAL,CAAWI,QAAX,CACGC,eADH,CACmBT,KADnB,EAEGU,IAFH,CAEQ,MAAM;AACV,aAAKC,QAAL,mBAAmBZ,aAAnB;AACD,OAJH,EAKGa,KALH,CAKSX,KAAK,IAAI;AACd,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACD,OAPH;AAQAK,MAAAA,KAAK,CAACO,cAAN;AACD,KAfkB;;AAAA,SAgBnBC,QAhBmB,GAgBRR,KAAK,IAAI;AAClB,WAAKK,QAAL,CAAc;AAAE,SAACL,KAAK,CAACS,MAAN,CAAaC,IAAd,GAAqBV,KAAK,CAACS,MAAN,CAAaE;AAApC,OAAd;AACD,KAlBkB;;AAEjB,SAAKV,KAAL,qBAAkBR,aAAlB;AACD;;AAgBDmB,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKX,KADvB;AAAA,UACCP,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAEP,UAAMkB,SAAS,GAAGnB,KAAK,KAAK,EAA5B;AACA,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKK,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWP,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKc,QAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,eALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAQ,MAAA,QAAQ,EAAEK,SAAlB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARF,EAWGlB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACmB,OAAV,CAXZ,CADF;AAeD;;AAtC4C;;AAwC/C,MAAMC,kBAAkB,GAAG,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAExB,MAAM,CAACyB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;;AAKA,eAAexB,kBAAf;AACA,MAAMyB,kBAAkB,GAAG3B,YAAY,CAACM,sBAAD,CAAvC;AACA,SAASqB,kBAAT,EAA6BF,kBAA7B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };"]},"metadata":{},"sourceType":"module"}